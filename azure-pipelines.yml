trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

services:
  mysql:
    image: mysql:latest
    env:
      MYSQL_ROOT_PASSWORD: '1234!@#$'
      MYSQL_DATABASE: TravelWeb
    ports:
      - 3306:3306
    options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

steps:
- task: Maven@4
  inputs:
    mavenPomFile: 'assignment1/pom.xml'
    goals: 'clean package'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
  displayName: 'Build and Package Maven Project'

- script: |
    echo "Waiting for MySQL to be ready..."
    for i in {1..30}; do
      if mysqladmin ping -h127.0.0.1 --silent; then
        echo "MySQL is up!"
        break
      fi
      echo "Waiting for MySQL..."
      sleep 5
    done
    echo "Creating database 'TravelWeb'..."
    mysql -h127.0.0.1 -uroot -p'1234!@#$' -e "CREATE DATABASE IF NOT EXISTS TravelWeb;"
  displayName: 'Wait for MySQL and Create Database'

- script: |
    mkdir -p $(Build.ArtifactStagingDirectory)/Release
    cp assignment1/target/*.war $(Build.ArtifactStagingDirectory)/Release/
    cd $(Build.ArtifactStagingDirectory)/Release
    zip -r app-package.zip .
  displayName: 'Package Build Output into .zip'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/Release'
    artifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Artifact: drop'

- script: |
    echo "Contents of Build.ArtifactStagingDirectory:"
    ls $(Build.ArtifactStagingDirectory)
  displayName: 'List Artifact Staging Directory Contents'

# New steps for deploying to Tomcat
- task: SSH@0
  inputs:
    sshEndpoint: 'linux-ssh'
    runOptions: 'commands'
    commands: |
      # Stop Tomcat server
      sudo systemctl stop tomcat10
      
      # Remove existing .war file if needed
      sudo rm -f /var/lib/tomcat10/webapps/yourApp.war
      
      # Copy the new .war file to Tomcat's webapps directory
      sudo cp $(Build.ArtifactStagingDirectory)/yourApp.war /var/lib/tomcat10/webapps/
      
      # Start Tomcat server
      sudo systemctl start tomcat10

